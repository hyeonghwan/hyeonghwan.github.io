{"version":3,"file":"component---src-pages-projects-index-jsx-dc38537a44ef622c5fb4.js","mappings":"8OAMA,MAAMA,EAAcC,IAAmB,IAAlB,SAAEC,GAAUD,EAC/B,MAAME,EAAoBD,EAASE,KAAKC,IACtC,MAAM,mBAAEC,GAAuBD,GACzB,KAAEE,GAASF,EAAQG,oBAAoBC,QACvC,MAAEC,EAAK,OAAEC,EAAM,KAAEC,EAAI,KAAEC,EAAI,KAAEC,GACjCT,EAAQG,oBAAoBO,YAC9B,OACEC,EAAAA,cAACC,EAAAA,KAAI,CACHC,UAAU,eACVC,IAAKd,EAAQG,oBAAoBY,GACjCC,GAAK,IAAGf,IAAqBC,KAE7BS,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKE,UAAU,sBAAsBR,GACrCM,EAAAA,cAACM,EAAAA,EAAI,CAACC,KAAMZ,EAAQO,UAAU,wBAC9BF,EAAAA,cAAA,OAAKE,UAAU,qBACZN,aAAI,EAAJA,EAAMY,MAAM,KAAKpB,KAAI,CAACQ,EAAMa,IACpBT,EAAAA,cAAA,OAAKG,IAAKM,GAAQb,OAI/BI,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKE,UAAU,qBAAqBL,GACpCG,EAAAA,cAAA,OAAKE,UAAU,qBACbF,EAAAA,cAAA,UACGF,aAAI,EAAJA,EAAMU,MAAM,KAAKpB,KAAI,CAACU,EAAMW,IACpBT,EAAAA,cAAA,MAAIG,IAAKM,GAAQX,QAK3B,IAGX,OAAOE,EAAAA,cAAAA,EAAAA,SAAA,KAAGb,EAAqB,E,4CCLjC,MAvBcF,IAAe,IAAd,KAAEyB,GAAMzB,EACrB,MAAM0B,GAAmBC,EAAAA,EAAAA,MACnBC,GAAWC,EAAAA,EAAAA,GAAWH,GACtBzB,EAAWwB,EAAKK,MAAMC,MACtBC,EAAaP,EAAKO,WAAWD,MAInC,OACEhB,EAAAA,cAACkB,EAAAA,EAAM,CAACC,QAASR,GACfX,EAAAA,cAACoB,EAAAA,EAAG,CAAC1B,MAAOmB,IACZb,EAAAA,cAACqB,EAAAA,EAAO,CAACJ,WAAYA,EAAYK,oBAAqBX,IACtDX,EAAAA,cAACuB,EAAAA,EAAS,CAAC7B,MAAOmB,IAClBb,EAAAA,cAACwB,EAAAA,EAAe,CAACC,YAPnB,oGAQEzB,EAAAA,cAAChB,EAAW,CAACE,SAAUA,IAChB,C","sources":["webpack://gatsby-starter-oasis/./src/components/ProjectList/index.jsx","webpack://gatsby-starter-oasis/./src/pages/projects/index.jsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport { Date } from '../Elements'\nimport './index.scss'\n\nconst ProjectList = ({ projects }) => {\n  const renderProjectList = projects.map((project) => {\n    const { sourceInstanceName } = project\n    const { slug } = project.childMarkdownRemark.fields\n    const { title, period, tech, tags, desc } =\n      project.childMarkdownRemark.frontmatter\n    return (\n      <Link\n        className=\"project-link\"\n        key={project.childMarkdownRemark.id}\n        to={`/${sourceInstanceName}${slug}`}\n      >\n        <div>\n          <div className=\"project-link-title\">{title}</div>\n          <Date date={period} className=\"project-link-period\" />\n          <div className=\"project-link-tech\">\n            {tech?.split(',').map((tech, index) => {\n              return <div key={index}>{tech}</div>\n            })}\n          </div>\n        </div>\n        <div>\n          <div className=\"project-link-tags\">{tags}</div>\n          <div className=\"project-link-desc\">\n            <ul>\n              {desc?.split(';').map((desc, index) => {\n                return <li key={index}>{desc}</li>\n              })}\n            </ul>\n          </div>\n        </div>\n      </Link>\n    )\n  })\n  return <>{renderProjectList}</>\n}\n\nProjectList.propTypes = {\n  projects: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport { ProjectList }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport { Layout } from '../../components/Layout'\nimport { Seo } from '../../components/Seo'\nimport { Sidebar } from '../../components/Sidebar'\nimport { ProjectList } from '../../components/ProjectList'\nimport { PageDescription } from '../../components/PageDescription'\nimport { PageTitle } from '../../components/PageTitle'\nimport { capitalize } from '../../utils/capitalize'\nimport { useTopLevelPathName } from '../../hooks'\n\nconst Index = ({ data }) => {\n  const topLevelPathName = useTopLevelPathName()\n  const pageName = capitalize(topLevelPathName)\n  const projects = data.posts.nodes\n  const directorys = data.directorys.nodes\n  const description =\n    'The major projects that have been carried out so far are sorted in order of recent development.'\n\n  return (\n    <Layout belongs={topLevelPathName}>\n      <Seo title={pageName} />\n      <Sidebar directorys={directorys} currentCategoryName={topLevelPathName} />\n      <PageTitle title={pageName} />\n      <PageDescription description={description} />\n      <ProjectList projects={projects} />\n    </Layout>\n  )\n}\n\nIndex.propTypes = {\n  data: PropTypes.object,\n}\n\nexport default Index\n\nexport const qurey = graphql`\n  query ProjectPage {\n    directorys: allDirectory(\n      filter: {\n        sourceInstanceName: { eq: \"projects\" }\n        relativeDirectory: { regex: \"/^$|^\\\\.\\\\.$/\" }\n      }\n      sort: { order: DESC, fields: relativeDirectory }\n    ) {\n      nodes {\n        id\n        name\n      }\n    }\n    posts: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"projects\" }\n        absolutePath: { regex: \"/.md$/\" }\n      }\n      sort: {\n        fields: childrenMarkdownRemark___frontmatter___period\n        order: DESC\n      }\n    ) {\n      nodes {\n        sourceInstanceName\n        childMarkdownRemark {\n          frontmatter {\n            title\n            tags\n            tech\n            desc\n            period\n          }\n          fields {\n            slug\n          }\n          id\n        }\n      }\n    }\n  }\n`\n"],"names":["ProjectList","_ref","projects","renderProjectList","map","project","sourceInstanceName","slug","childMarkdownRemark","fields","title","period","tech","tags","desc","frontmatter","React","Link","className","key","id","to","Date","date","split","index","data","topLevelPathName","useTopLevelPathName","pageName","capitalize","posts","nodes","directorys","Layout","belongs","Seo","Sidebar","currentCategoryName","PageTitle","PageDescription","description"],"sourceRoot":""}