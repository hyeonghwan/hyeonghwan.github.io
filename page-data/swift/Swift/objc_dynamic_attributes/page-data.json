{"componentChunkName":"component---src-templates-index-jsx","path":"/swift/Swift/objc_dynamic_attributes/","result":{"data":{"directorys":{"nodes":[{"id":"48b2490f-4b29-5daf-8c31-6814dc5a3ea0","name":"swift"},{"id":"3a43ee12-a97f-57da-96b6-0b10905c7d68","name":"CodingTest"},{"id":"b374b720-eb2b-5cb4-9e9b-26bf1f845e2e","name":"Swift"}]},"markdown":{"html":"<h2 id=\"objc-dynamic-속성은-어떻게-작동하는가\" style=\"position:relative;\"><a href=\"#objc-dynamic-%EC%86%8D%EC%84%B1%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9E%91%EB%8F%99%ED%95%98%EB%8A%94%EA%B0%80\" aria-label=\"objc dynamic 속성은 어떻게 작동하는가 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@Objc, dynamic 속성은 어떻게 작동하는가</h2>\n<blockquote>\n<p>Objective-C runtime visibility and the depths of dynamic dispatch in the modern Swift</p>\n<p>Objective C 와 Swift 간의 상호운용성을 고려할 때는 두가지 요소가 있습니다.</p>\n</blockquote>\n<ul>\n<li>@objc 키워드는 Swift코드를 Objective-C 에 노출하는 역할을 합니다.</li>\n<li>dynamic 키워드는 Objective-C의 dynamic Dispatch 를 사용하기위해 명시해야 합니다.</li>\n</ul>\n<h3 id=\"내가-알고-있는것\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EA%B0%80-%EC%95%8C%EA%B3%A0-%EC%9E%88%EB%8A%94%EA%B2%83\" aria-label=\"내가 알고 있는것 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내가 알고 있는것</h3>\n<blockquote>\n<p>Swift 는 기본적으로 정적 Dispatch를 사용하지만 Dynamic Dispatch 로 작동을 할때 Vtable을 만들어서 사용하는 것으로 알고 있습니다.\nSwift 는 기본적으로 Native Language 이기 때문에 Objective-C 와는 별개로 작동을 하고 Objective-C 와의 상호운용성을 위해서 이러한 지시자들이 있는것으로 알고있습니다.</p>\n</blockquote>\n<ul>\n<li><strong>Vtable</strong>: 객체 지향 프로그래밍에서 다형성을 지원하기 위해서 지원하는 함수의 포인터 배열이라고 생각하면 됩니다. -> 예를 들어 부모클래스 에서 debugPrint 라는 함수를 서브클래스에서 override 해서 재정의 했을때 함수를 호출할때 부모 또는 자식 어떤 클래스의 함수를 호출할지 결정하기 위해서 사용됩니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TestObjcDynamic</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">42</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token attribute atrule\">@objc</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">performOBJC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">42</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token attribute atrule\">@objc</span> <span class=\"token keyword\">dynamic</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">performDynamic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">42</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>perform 은 Swift 기본 함수</li>\n<li>performOBJC 은 Objective-C Run time 에 노출하도록 (가시성?ㅇ Objective C에서 코드를 호출하도록 노출하는 의미로 생각하고 있습니다.)  @objc 지시자를 선언하였습니다.</li>\n<li>performDynamic 은 dynamic Dispatch 를 하도록 dynamic 키워드를 선언하였습니다. 이 함수도 2번과 마찬가지로 Objective-C 에 노출됩니다.</li>\n</ol>\n<h2 id=\"swift-compilation\" style=\"position:relative;\"><a href=\"#swift-compilation\" aria-label=\"swift compilation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swift Compilation</h2>\n<blockquote>\n<p>Swift 는 컴파일 언어로써 Sil -> IR -> .O 파일로 컴파일 됩니다. 자세한 내용은 추후 업로드를 해보겠습니다.\n중간 과정에 SIL 을 살펴볼 예정이므로</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">swiftc <span class=\"token operator\">-</span>emit<span class=\"token operator\">-</span>sil <span class=\"token class-name\">Objc_dynamic</span><span class=\"token punctuation\">.</span>swift\n<span class=\"token comment\">// 이 명령어를 사용하여 Swift Intermediate Language 로 컴파일하여 한번 살펴보겠습니다.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// TestObjcDynamic.perform()</span>\nsil hidden @$s12Objc_dynamic04TestA7DynamicC7performSiyF <span class=\"token punctuation\">:</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token attribute atrule\">@guaranteed</span> <span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// %0 \"self\"                                      // user: %1</span>\n<span class=\"token function\">bb0</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  debug_value <span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">let</span><span class=\"token punctuation\">,</span> name <span class=\"token string-literal\"><span class=\"token string\">\"self\"</span></span><span class=\"token punctuation\">,</span> argno <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> implicit <span class=\"token comment\">// id: %1</span>\n  <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> integer_literal $<span class=\"token class-name\">Builtin</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span>         <span class=\"token comment\">// user: %3</span>\n  <span class=\"token operator\">%</span><span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">struct</span> $<span class=\"token class-name\">Int</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">Builtin</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int64</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\">// user: %4</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">%</span><span class=\"token number\">3</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">Int</span>                                <span class=\"token comment\">// id: %4</span>\n<span class=\"token punctuation\">}</span> <span class=\"token comment\">// end sil function '$s12Objc_dynamic04TestA7DynamicC7performSiyF'</span></code></pre></div>\n<p>좀 난해해 보이지만</p>\n<blockquote>\n<p>name mangling 을 통해서 클래스와 함수의 identity를 설정합니다.</p>\n</blockquote>\n<blockquote>\n<p>정의한 클래스와 함수는 mangling 된 식별자를 자세히 보면 선언했던 클래스와 함수의 이름이 섞여 들어가 있는걸 볼수 있습니다.</p>\n</blockquote>\n<blockquote>\n<p>42를 리턴하기 위해서 적당히 많은 일들이 일어나게 됩니다... ㅎ (대충 이해만 하고 넘어가보자)</p>\n</blockquote>\n<blockquote>\n<p>이 외에도 함수를 호출하기 위해서 Class Type을 인자로 받는 부분이 인상적이지만 Objc 와 dynamic 부분만 집중적으로 살펴보도록 합시다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// TestObjcDynamic.performOBJC()</span>\nsil hidden @$s12Objc_dynamic04TestA7DynamicC11performOBJCSiyF <span class=\"token punctuation\">:</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token attribute atrule\">@guaranteed</span> <span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// %0 \"self\"                                      // user: %1</span>\n<span class=\"token function\">bb0</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  debug_value <span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">let</span><span class=\"token punctuation\">,</span> name <span class=\"token string-literal\"><span class=\"token string\">\"self\"</span></span><span class=\"token punctuation\">,</span> argno <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> implicit <span class=\"token comment\">// id: %1</span>\n  <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> integer_literal $<span class=\"token class-name\">Builtin</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span>         <span class=\"token comment\">// user: %3</span>\n  <span class=\"token operator\">%</span><span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">struct</span> $<span class=\"token class-name\">Int</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">Builtin</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int64</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\">// user: %4</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">%</span><span class=\"token number\">3</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">Int</span>                                <span class=\"token comment\">// id: %4</span>\n<span class=\"token punctuation\">}</span> <span class=\"token comment\">// end sil function '$s12Objc_dynamic04TestA7DynamicC11performOBJCSiyF'</span>\n\n<span class=\"token comment\">// @objc TestObjcDynamic.performOBJC()</span>\nsil <span class=\"token keyword\">private</span> <span class=\"token punctuation\">[</span>thunk<span class=\"token punctuation\">]</span> @$s12Objc_dynamic04TestA7DynamicC11performOBJCSiyFTo <span class=\"token punctuation\">:</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>objc_method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// %0                                             // users: %4, %3, %1</span>\n<span class=\"token function\">bb0</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  strong_retain <span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span>             <span class=\"token comment\">// id: %1</span>\n  <span class=\"token comment\">// function_ref TestObjcDynamic.performOBJC()</span>\n  <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> function_ref @$s12Objc_dynamic04TestA7DynamicC11performOBJCSiyF <span class=\"token punctuation\">:</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token attribute atrule\">@guaranteed</span> <span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token comment\">// user: %3</span>\n  <span class=\"token operator\">%</span><span class=\"token number\">3</span> <span class=\"token operator\">=</span> apply <span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token attribute atrule\">@guaranteed</span> <span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token comment\">// user: %5</span>\n  strong_release <span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span>            <span class=\"token comment\">// id: %4</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">%</span><span class=\"token number\">3</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">Int</span>                                <span class=\"token comment\">// id: %5</span>\n<span class=\"token punctuation\">}</span> <span class=\"token comment\">// end sil function '$s12Objc_dynamic04TestA7DynamicC11performOBJCSiyFTo'</span>\n\n<span class=\"token comment\">// @objc TestObjcDynamic.performDynamic()</span>\nsil <span class=\"token keyword\">private</span> <span class=\"token punctuation\">[</span>thunk<span class=\"token punctuation\">]</span> @$s12Objc_dynamic04TestA7DynamicC07performD0SiyFTo <span class=\"token punctuation\">:</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>objc_method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// %0                                             // users: %4, %3, %1</span>\n<span class=\"token function\">bb0</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  strong_retain <span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span>             <span class=\"token comment\">// id: %1</span>\n  <span class=\"token comment\">// function_ref TestObjcDynamic.performDynamic()</span>\n  <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> function_ref @$s12Objc_dynamic04TestA7DynamicC07performD0SiyF <span class=\"token punctuation\">:</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token attribute atrule\">@guaranteed</span> <span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token comment\">// user: %3</span>\n  <span class=\"token operator\">%</span><span class=\"token number\">3</span> <span class=\"token operator\">=</span> apply <span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token attribute atrule\">@guaranteed</span> <span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token comment\">// user: %5</span>\n  strong_release <span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span>            <span class=\"token comment\">// id: %4</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">%</span><span class=\"token number\">3</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">Int</span>                                <span class=\"token comment\">// id: %5</span>\n<span class=\"token punctuation\">}</span> <span class=\"token comment\">// end sil function '$s12Objc_dynamic04TestA7DynamicC07performD0SiyFTo'</span>\n\n<span class=\"token comment\">// TestObjcDynamic.performDynamic()</span>\nsil hidden @$s12Objc_dynamic04TestA7DynamicC07performD0SiyF <span class=\"token punctuation\">:</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token attribute atrule\">@guaranteed</span> <span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// %0 \"self\"                                      // user: %1</span>\n<span class=\"token function\">bb0</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  debug_value <span class=\"token operator\">%</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">let</span><span class=\"token punctuation\">,</span> name <span class=\"token string-literal\"><span class=\"token string\">\"self\"</span></span><span class=\"token punctuation\">,</span> argno <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> implicit <span class=\"token comment\">// id: %1</span>\n  <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> integer_literal $<span class=\"token class-name\">Builtin</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span>         <span class=\"token comment\">// user: %3</span>\n  <span class=\"token operator\">%</span><span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">struct</span> $<span class=\"token class-name\">Int</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">Builtin</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int64</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\">// user: %4</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">%</span><span class=\"token number\">3</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">Int</span>                                <span class=\"token comment\">// id: %4</span>\n<span class=\"token punctuation\">}</span> <span class=\"token comment\">// end sil function '$s12Objc_dynamic04TestA7DynamicC07performD0SiyF'</span></code></pre></div>\n<ul>\n<li>objc 함수와 objc dynamic 함수 모두 Swift 에서 사용될 sil을 생성하고</li>\n<li>Objective-C 에서 사용할수 있도록 함수 포인터를 전달하는걸 볼 수 있습니다.</li>\n</ul>\n<p>-> <strong>dynamic 을 붙인 함수와 그냥 objc 함수의 sil이 동일한 것을 볼 수 있습니다.</strong></p>\n<blockquote>\n<p>ㅇ ? 동일하면 똑같은 건가 ?</p>\n</blockquote>\n<h3 id=\"vtable-을-살펴보자\" style=\"position:relative;\"><a href=\"#vtable-%EC%9D%84-%EC%82%B4%ED%8E%B4%EB%B3%B4%EC%9E%90\" aria-label=\"vtable 을 살펴보자 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vtable 을 살펴보자</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">sil_vtable <span class=\"token class-name\">TestObjcDynamic</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token other-directive property\">#TestObjcDynamic</span><span class=\"token punctuation\">.</span>perform<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">:</span> @$s12Objc_dynamic04TestA7DynamicC7performSiyF\t<span class=\"token comment\">// TestObjcDynamic.perform()</span>\n  <span class=\"token other-directive property\">#TestObjcDynamic</span><span class=\"token punctuation\">.</span>performOBJC<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">:</span> @$s12Objc_dynamic04TestA7DynamicC11performOBJCSiyF\t<span class=\"token comment\">// TestObjcDynamic.performOBJC()</span>\n  <span class=\"token other-directive property\">#TestObjcDynamic</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">init</span><span class=\"token operator\">!</span>allocator<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">Type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">TestObjcDynamic</span> <span class=\"token punctuation\">:</span> @$s12Objc_dynamic04TestA7DynamicCACycfC\t<span class=\"token comment\">// TestObjcDynamic.__allocating_init()</span>\n  <span class=\"token other-directive property\">#TestObjcDynamic</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">deinit</span><span class=\"token operator\">!</span>deallocator<span class=\"token punctuation\">:</span> @$s12Objc_dynamic04TestA7DynamicCfD\t<span class=\"token comment\">// TestObjcDynamic.__deallocating_deinit</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>perform</li>\n<li>performOBJC</li>\n<li>init</li>\n<li>deinit</li>\n</ol>\n<p><strong>이 정의 되어있는데 performDynamic 이 보이지 않습니다. ??</strong></p>\n<blockquote>\n<p>호출하는 코드를 작성하고 다시 sil을 생성해보겠습니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> test <span class=\"token operator\">=</span> <span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> p1 <span class=\"token operator\">=</span> test<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> p2 <span class=\"token operator\">=</span> test<span class=\"token punctuation\">.</span><span class=\"token function\">performOBJC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> p3 <span class=\"token operator\">=</span> test<span class=\"token punctuation\">.</span><span class=\"token function\">performDynamic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 일부만 가져왔습니다.</span>\n<span class=\"token operator\">%</span><span class=\"token number\">11</span> <span class=\"token operator\">=</span> class_method <span class=\"token operator\">%</span><span class=\"token number\">10</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">,</span> <span class=\"token other-directive property\">#TestObjcDynamic</span><span class=\"token punctuation\">.</span>perform <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token attribute atrule\">@guaranteed</span> <span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token comment\">// user: %12</span>\n <span class=\"token operator\">%</span><span class=\"token number\">17</span> <span class=\"token operator\">=</span> class_method <span class=\"token operator\">%</span><span class=\"token number\">16</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">,</span> <span class=\"token other-directive property\">#TestObjcDynamic</span><span class=\"token punctuation\">.</span>performOBJC <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token attribute atrule\">@guaranteed</span> <span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token comment\">// user: %18</span>\n<span class=\"token operator\">%</span><span class=\"token number\">23</span> <span class=\"token operator\">=</span> objc_method <span class=\"token operator\">%</span><span class=\"token number\">22</span> <span class=\"token punctuation\">:</span> $<span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">,</span> <span class=\"token other-directive property\">#TestObjcDynamic</span><span class=\"token punctuation\">.</span>performDynamic<span class=\"token operator\">!</span>foreign <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> $<span class=\"token attribute atrule\">@convention</span><span class=\"token punctuation\">(</span>objc_method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TestObjcDynamic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token comment\">// user: %24</span></code></pre></div>\n<p>perform, performObjc 는 Vtable을 조회하여 class_method 로 호출합니다.\n반면에 performDynamic 은 objc_method 방식 Objective-c의 메서드로 호출됩니다.</p>\n<p>dynamic 키워드를 사용하면 Swift 메서드 호출방식이 아닌 Objective-c 로 호출로 강제되는 것을 볼 수 있습니다.</p>\n<h3 id=\"성능\" style=\"position:relative;\"><a href=\"#%EC%84%B1%EB%8A%A5\" aria-label=\"성능 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>성능</h3>\n<p>성능상으로는 Objective-C의 동적 디스패치로 작동하게 되면 성능이 많이 하락하게 됩니다.</p>\n<ul>\n<li>static > swift dynamic using Vtable > objc_msgSend</li>\n</ul>\n<h3 id=\"사용처\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%B2%98\" aria-label=\"사용처 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용처</h3>\n<p>@objc dyanmic 은 주로 KVO 특정 프로퍼티의 값을 Objective-C 의 힘을 빌려 값이 런타임에 변경되었을때 관찰하도록 지시자를 추가하고 observe 함수로 관찰할수 있습니다.</p>\n<ul>\n<li>dynamic 키워드는 Objective-C의 동적 디스패치를 하도록 하기 때문에 런타임 상에서 값이 변경되었을때 값을 관찰할 수 있습니다. KVO 나 method Swizzling (런타임 상에서 메서드를 exchange) 할때 많이 쓰입니다.</li>\n<li>@objc 는 Objective - C에 노출되어 Swift 코드와 Objc 간의 상호운용성을 지원하기 위한 지시자 입니다. 주로 button 의 이벤트 호출할때 많이 작성했죠, objective-c에서 swift 코드를 호출하기 위해서는 이 지시자가 필요합니다.(@objc 지시자를 쓰기 위해서는 NSObject 를 상속 받아야 합니다.)</li>\n</ul>","id":"3d5c4cca-283b-5d27-8769-2dc1448e3551","excerpt":"@Objc, dynamic 속성은 어떻게 작동하는가 Objective-C runtime visibility and the depths of dynamic dispatch in…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#objc-dynamic-%EC%86%8D%EC%84%B1%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9E%91%EB%8F%99%ED%95%98%EB%8A%94%EA%B0%80\">@Objc, dynamic 속성은 어떻게 작동하는가</a></p>\n<ul>\n<li><a href=\"#%EB%82%B4%EA%B0%80-%EC%95%8C%EA%B3%A0-%EC%9E%88%EB%8A%94%EA%B2%83\">내가 알고 있는것</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#swift-compilation\">Swift Compilation</a></p>\n<ul>\n<li><a href=\"#vtable-%EC%9D%84-%EC%82%B4%ED%8E%B4%EB%B3%B4%EC%9E%90\">Vtable 을 살펴보자</a></li>\n<li><a href=\"#%EC%84%B1%EB%8A%A5\">성능</a></li>\n<li><a href=\"#%EC%82%AC%EC%9A%A9%EC%B2%98\">사용처</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/Swift/objc_dynamic_attributes/"},"frontmatter":{"title":"@Objc @dynamic Attributes","date":"January 11 , 2024","tags":"Swift, Objc, Dynamic"}}},"pageContext":{"slug":"/Swift/objc_dynamic_attributes/","curSrcInsName":"swift","previous":{"title":"Method Dispatch","slug":"/Swift/method-dispatch/","sourceInstanceName":"swift"},"next":{"title":"Dynamic Programming","slug":"/CodingTest/swift-dynamic-programming/","sourceInstanceName":"swift"}}},"staticQueryHashes":["1603766897","3484302218","993254799"]}